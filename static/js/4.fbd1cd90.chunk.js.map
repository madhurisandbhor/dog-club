{"version":3,"sources":["images/cancel-icon.svg","containers/UploadContainer/ImagePreview/styles.ts","containers/UploadContainer/ImagePreview/index.tsx","containers/UploadContainer/styles.ts","containers/UploadContainer/index.tsx"],"names":["styles","root","display","flexDirection","alignItems","justifyItems","fontSize","previewImg","position","boxShadow","marginTop","width","margin","height","uploadBtn","alignSelf","marginRight","background","color","border","padding","borderRadius","cursor","removeButton","top","right","breedName","textAlign","minHeight","overflow","textOverflow","fontWeight","whiteSpace","textTransform","hidden","error","action","visiblity","visibility","ImagePreview","classes","image","removeImg","dogsList","onUpload","imageRef","useRef","useReducer","reducer","loading","data","classify","dispatch","useEffect","onClassify","a","current","type","matches","mobilenet","model","result","prediction","className","filter","item","toLowerCase","includes","length","payload","errorMsg","message","id","onClick","src","cancelIcon","alt","ref","clsx","join","Loading","withStyles","memo","modal","outline","container","maxHeight","content","preview","justifyContent","fileInput","open","closeModal","useState","setImage","inputFileRef","useCallback","value","cancelModal","handleUpload","imgToUpload","onClose","center","classNames","name","accept","onChange","event","ele","target","files","img","URL","createObjectURL"],"mappings":"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","file":"static/js/4.fbd1cd90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cancel-icon.c4498ba1.svg\";","const styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyItems: 'center',\r\n    fontSize: '1.6rem',\r\n  },\r\n  previewImg: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyItems: 'center',\r\n    position: 'relative',\r\n    boxShadow: '0 7px 30px -10px rgba(150,170,180,0.5)',\r\n    marginTop: '2rem',\r\n    width: '20rem',\r\n    '& > img': {\r\n      margin: '1rem',\r\n      width: '18rem',\r\n      height: '18rem',\r\n    },\r\n  },\r\n  uploadBtn: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: '1.5rem',\r\n    '& > p': {\r\n      alignSelf: 'center',\r\n      marginRight: '1rem',\r\n      fontSize: '1.6rem',\r\n    },\r\n    '& > button': {\r\n      background: '#02bef7',\r\n      color: 'white',\r\n      border: 0,\r\n      padding: '0.5rem 1rem',\r\n      borderRadius: '0.5rem',\r\n\r\n      '&:hover': {\r\n        cursor: 'pointer',\r\n        background: '#02bef7',\r\n        color: 'white',\r\n      },\r\n    },\r\n  },\r\n  removeButton: {\r\n    position: 'absolute',\r\n    top: '0.5rem',\r\n    right: '0.5rem',\r\n    border: 0,\r\n  },\r\n  breedName: {\r\n    margin: '0 auto 1rem auto',\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: '0 1rem',\r\n    minHeight: '3.6rem',\r\n    '& > div': {\r\n      color: '#02bef7',\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      fontWeight: 'bold',\r\n      whiteSpace: 'noWrap',\r\n      width: '100%',\r\n      textTransform: 'capitalize',\r\n    },\r\n  },\r\n  hidden: {\r\n    display: 'none',\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    margin: '1rem auto',\r\n  },\r\n  action: {\r\n    position: 'relative',\r\n    minHeight: '5rem',\r\n    textAlign: 'center',\r\n  },\r\n  visiblity: {\r\n    visibility: 'hidden',\r\n  },\r\n  '@media (max-width: 600px)': {\r\n    uploadBtn: {\r\n      flexDirection: 'column',\r\n      '& > p': {\r\n        marginRight: 0,\r\n      },\r\n      '& > button': {\r\n        marginTop: '1rem',\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nexport default styles\r\n","import React, { FC, useRef, memo, useEffect, useReducer } from 'react'\nimport * as mobilenet from '@tensorflow-models/mobilenet'\nimport '@tensorflow/tfjs-backend-webgl'\nimport clsx from 'clsx'\nimport Loading from 'components/Loading'\nimport withStyles, { WithStylesProps } from 'react-jss'\nimport cancelIcon from 'images/cancel-icon.svg'\nimport reducer from 'utils/reducer'\nimport { ClassifyType } from 'types/common'\nimport styles from './styles'\n\ninterface Props extends WithStylesProps<typeof styles> {\n  image: string\n  removeImg: () => void\n  dogsList: string[]\n  onUpload: (image: string, selectedImg: string[]) => void\n}\n\nconst ImagePreview: FC<Props> = ({\n  classes,\n  image,\n  removeImg,\n  dogsList,\n  onUpload,\n}: Props): JSX.Element => {\n  const imageRef = useRef<HTMLImageElement>(null)\n  const initialState = {\n    loading: false,\n    error: null,\n    data: [],\n  }\n  const [classify, dispatch] = useReducer(\n    reducer,\n    initialState as ClassifyType,\n  )\n  const unidentifiedError = 'Breed not indentified, try another photo'\n\n  useEffect(() => {\n    const onClassify = async () => {\n      if (imageRef && imageRef.current) {\n        try {\n          dispatch({ type: 'loading' })\n          let matches: string[] = []\n          const model = await mobilenet.load()\n          const result = await model.classify(imageRef.current)\n          const prediction = result[0].className // considering top prediction\n          if (prediction)\n            matches = dogsList.filter((item) =>\n              prediction.toLowerCase().includes(item),\n            )\n          if (matches.length > 0)\n            dispatch({ type: 'success', payload: matches })\n          else dispatch({ type: 'error', payload: unidentifiedError })\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } catch (error: any) {\n          const errorMsg = error.message ? error.message : error\n          dispatch({ type: 'error', payload: errorMsg })\n        }\n      }\n    }\n    onClassify()\n  }, [dogsList])\n\n  return (\n    <div className={classes.root} data-testid=\"image-preview-root\">\n      <div className={classes.previewImg}>\n        <button\n          type=\"button\"\n          id=\"imgRemoveButton\"\n          onClick={removeImg}\n          className={classes.removeButton}\n        >\n          <img src={cancelIcon} alt=\"cancelBtn\" />\n        </button>\n        <img\n          src={image}\n          alt=\"dogImagePreview\"\n          ref={imageRef}\n          id=\"previewImg\"\n        />\n        <div\n          className={clsx(classes.breedName, {\n            [classes.visiblity]: classify.data.length === 0,\n          })}\n        >\n          <p>Dog Breed</p>\n          <div data-testid=\"dogBreed\">\n            {classify.data.length > 0 &&\n              (classify.data as string[]).join(', ')}\n          </div>\n        </div>\n      </div>\n      <div className={classes.action}>\n        {classify.loading && <Loading id=\"imageFile\" />}\n        {!classify.loading && classify.error && (\n          <div id=\"error\" className={classes.error}>\n            {classify.error}\n          </div>\n        )}\n        {!classify.loading && !classify.error && (\n          <div className={classes.uploadBtn}>\n            <p>Do you want to upload this image?</p>\n            <button\n              type=\"button\"\n              id=\"uploadImage\"\n              onClick={() =>\n                onUpload(image, classify.data as string[])\n              }\n            >\n              Upload\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(memo(ImagePreview))\n","const styles = {\r\n  modal: {\r\n    width: '60rem',\r\n    height: '40rem',\r\n    borderRadius: '0.8rem',\r\n    fontSize: '1.6rem',\r\n    outline: 'none',\r\n  },\r\n  container: {\r\n    padding: '1.5rem',\r\n    overflow: 'auto',\r\n    maxHeight: '100%',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n    '& > p': {\r\n      fontSize: '1.6rem',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  preview: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  fileInput: {\r\n    width: '50%',\r\n  },\r\n  '@media (max-width: 600px)': {\r\n    modal: {\r\n      width: '30rem',\r\n      fontSize: '1.4rem',\r\n    },\r\n    container: {\r\n      padding: '1rem',\r\n    },\r\n    fileInput: {\r\n      width: '100%',\r\n    },\r\n  },\r\n}\r\n\r\nexport default styles\r\n","import React, { FC, useState, useRef, useCallback } from 'react'\r\nimport { Modal } from 'react-responsive-modal'\r\nimport 'react-responsive-modal/styles.css'\r\nimport withStyles, { WithStylesProps } from 'react-jss'\r\nimport ImagePreview from './ImagePreview'\r\nimport styles from './styles'\r\n\r\ninterface Props extends WithStylesProps<typeof styles> {\r\n  open: boolean\r\n  dogsList: string[]\r\n  closeModal: () => void\r\n  onUpload: (img: string, matches: string[]) => void\r\n}\r\n\r\nconst UploadImage: FC<Props> = ({\r\n  classes,\r\n  dogsList,\r\n  open,\r\n  closeModal,\r\n  onUpload,\r\n}): JSX.Element => {\r\n  const [image, setImage] = useState('')\r\n  const inputFileRef = useRef<HTMLInputElement>(null)\r\n\r\n  const onImageChange = (event: React.ChangeEvent) => {\r\n    const ele = event.target as HTMLInputElement\r\n    if (ele.files && ele.files[0]) {\r\n      const img = ele.files[0]\r\n      setImage(URL.createObjectURL(img))\r\n    }\r\n  }\r\n\r\n  const removeImg = useCallback(() => {\r\n    setImage('')\r\n    if (inputFileRef && inputFileRef.current)\r\n      inputFileRef.current.value = ''\r\n  }, [])\r\n\r\n  const cancelModal = useCallback(() => {\r\n    removeImg()\r\n    closeModal()\r\n  }, [closeModal, removeImg])\r\n\r\n  const handleUpload = useCallback(\r\n    (imgToUpload: string, matches: string[]) => {\r\n      removeImg()\r\n      onUpload(imgToUpload, matches)\r\n    },\r\n    [removeImg, onUpload],\r\n  )\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={cancelModal}\r\n      center\r\n      classNames={{ modal: classes.modal }}\r\n    >\r\n      <div className={classes.container}>\r\n        <div className={classes.content}>\r\n          <p>Upload your dog&apos;s image</p>\r\n          <div className={classes.preview}>\r\n            {!image ? (\r\n              <input\r\n                id=\"inputFile\"\r\n                data-testid=\"input-file\"\r\n                name=\"dogImage\"\r\n                type=\"file\"\r\n                // capture=\"camera\"\r\n                accept=\"image/*\"\r\n                ref={inputFileRef}\r\n                onChange={onImageChange}\r\n                className={classes.fileInput}\r\n              />\r\n            ) : (\r\n              <ImagePreview\r\n                image={image}\r\n                removeImg={removeImg}\r\n                dogsList={dogsList}\r\n                onUpload={handleUpload}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default withStyles(styles)(UploadImage)\r\n"],"sourceRoot":""}